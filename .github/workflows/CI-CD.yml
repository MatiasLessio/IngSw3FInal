name: CI/CD worflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build images
      run: |
        docker-compose build

    - name: Login to DockerHub
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Tag images
      run: |
        docker tag ingsw3final_backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
        docker tag ingsw3final_frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
      
    - name: Push images
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest

  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Start Backend Container
      run: |
        docker-compose up -d backend
        
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Execute Unit Tests
      run: docker exec backend go test -v ./services/tests
        
    - name: Stop Backend Container
      run: |
        docker-compose down

  deploy:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Configure gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.5.0
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH  }}
        project_id: ${{ secrets.PROJECT_ID }}
        export_default_credentials: true

    - name: Configure Docker for Container Registry
      run: |
        gcloud auth configure-docker

    - name: Login to DockerHub
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Download Docker images from dockerhub
      run: |
        docker pull matiaslessioucc/backend:latest
        docker pull matiaslessioucc/frontend:latest

    - name: Tag Backend and Frontend Docker images
      run: |
        docker tag matiaslessioucc/backend:latest gcr.io/${{ secrets.PROJECT_ID }}/backend:latest
        docker tag matiaslessioucc/frontend:latest gcr.io/${{ secrets.PROJECT_ID }}/frontend:latest

    - name: Push Backend and Frontend Docker images to Google Container Artifact Registry
      run: |
        docker push gcr.io/${{ secrets.PROJECT_ID }}/backend:latest
        docker push gcr.io/${{ secrets.PROJECT_ID }}/frontend:latest

    - name: Deploy Frontend to Google Cloud Run
      run: |
        gcloud run deploy frontend \
         --image gcr.io/${{ secrets.PROJECT_ID }}/frontend:latest \
         --port=4200 \
         --platform managed \
         --region=us-central1 \
         --allow-unauthenticated \
         --max-instances=15

    - name: Deploy backend to Google Cloud Run
      run: |
        gcloud run deploy backend \
        --image gcr.io/${{ secrets.PROJECT_ID }}/backend:latest \
        --port=8090 \
        --platform managed \
        --region=us-central1 \
        --allow-unauthenticated \
        --max-instances=15 \
        --set-env-vars=DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASS=${{ secrets.DB_PASSWORD }}
  integration-tests:

      needs: deploy
      runs-on: ubuntu-latest
      steps:
            
            - name: Checkout code
              uses: actions/checkout@v2
        
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 'latest'
        
            - name: Install dependencies for integration tests
              working-directory: ./frontend
              run: | 
                npx playwright install --force
                npm install --force
                sudo apt-get install -y xvfb
              
        
            - name: Run Integration Tests
              working-directory: ./frontend/e2e
              run: xvfb-run -a npx codeceptjs run --steps